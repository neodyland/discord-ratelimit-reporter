name: Rust Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup QEMU
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Build with Docker
        run: |
          docker build \
            --platform ${{ matrix.target == 'aarch64-unknown-linux-gnu' && 'linux/arm64' || 'linux/amd64' }} \
            --build-arg TARGET=${{ matrix.target }} \
            --build-arg APP_NAME=discord-ratelimit-reporter \
            -t rust-build:${{ matrix.target }} \
            .

      - name: Extract artifacts from Docker
        run: |
          mkdir -p target/${{ matrix.target }}/release
          docker create --name temp-container rust-build:${{ matrix.target }}
          docker cp temp-container:/app/target/${{ matrix.target }}/release/discord-ratelimit-reporter ./discord-ratelimit-reporter-${{ matrix.target }}
          docker rm temp-container

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: discord-ratelimit-reporter-${{ matrix.target }}
          path: ./discord-ratelimit-reporter-${{ matrix.target }}
          if-no-files-found: error
